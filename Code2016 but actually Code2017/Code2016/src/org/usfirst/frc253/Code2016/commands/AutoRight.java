// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc253.Code2016.commands;

import org.usfirst.frc253.Code2016.Robot;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.Ultrasonic;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.interfaces.Gyro;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

public class AutoRight extends Command {
	
	//Sensor declarations
	private Gyro gyro;
	private Ultrasonic ultraLeft;
	private Ultrasonic ultraRight;
	//These are referenced in AutoRight()
	
    public AutoRight() {
    	
    	//Subsystem requirements
    	requires(Robot.sensorData);
    	requires(Robot.drivetraintank);
    	requires(Robot.gearFlip);
    	
    	//Creates instances of sensor objects
    	gyro = Robot.sensorData.gyro;
    	ultraLeft = Robot.sensorData.ultraLeft;
    	ultraRight = Robot.sensorData.ultraRight;
    	//These are referenced in execute()
    	
    	ultraLeft.setAutomaticMode(true);
		ultraRight.setAutomaticMode(true);
    }

    protected void initialize() {
    }

    protected void execute() {
    	
    	//Creates timer object
    	Timer myTimer = new Timer();
    	
    	//Straight drive
    	myTimer.start();
    	if(myTimer.get() < 2.0){
    		Robot.drivetraintank.setLeft_Back(-.35);
        	Robot.drivetraintank.setLeft(-.35);
        	Robot.drivetraintank.setRight(-.35);
        	Robot.drivetraintank.setRight_Back(-.35);
    	}
    	myTimer.stop();
    	myTimer.reset();
    	
    	//Counterclockwise rotation
    	double gyroAngle = gyro.getAngle();
    	while(gyroAngle < 45){
    		Robot.drivetraintank.setLeft_Back(.25);
        	Robot.drivetraintank.setLeft(.25);
        	Robot.drivetraintank.setRight(-.25);
        	Robot.drivetraintank.setRight_Back(-.25);
    	}
    	
    	//Straight drive
    	myTimer.start();
    	if(myTimer.get() < 1.0){
    		Robot.drivetraintank.setLeft_Back(-.35);
        	Robot.drivetraintank.setLeft(-.35);
        	Robot.drivetraintank.setRight(-.35);
        	Robot.drivetraintank.setRight_Back(-.35);
    	}
    	myTimer.stop();
    	myTimer.reset();
    	
    	//Reads ultrasonic input
    	double rangeLeft = ultraLeft.getRangeInches();
    	double rangeRight = ultraRight.getRangeInches();
    	SmartDashboard.putNumber("Left Ultrasonic", rangeLeft);
    	SmartDashboard.putNumber("Right Ultrasonic", rangeRight);
    	
    	//Back up to position
    	if((rangeLeft + rangeRight)/2.00 > 11.00){
    		//Deploy gear and retract
    		myTimer.start();
        	if(myTimer.get() < 0.5){
        		Robot.gearFlip.DeployGear();
        	} else if(myTimer.get() < 1.0){
        		Robot.gearFlip.Retract();
        	}
        	end();
    	} else {
    		//Reverse Straight drive
    		Robot.drivetraintank.setLeft_Back(.25);
        	Robot.drivetraintank.setLeft(.25);
        	Robot.drivetraintank.setRight_Back(.25);
        	Robot.drivetraintank.setRight(.25);
        	
        	//Update distances
        	rangeLeft = ultraLeft.getRangeInches();
        	rangeRight = ultraRight.getRangeInches();
    	}
    }

    protected boolean isFinished() {
        return false;
    }

    protected void end() {
    	//Stops drive train and gear flip
    	Robot.drivetraintank.setLeft_Back(0);
    	Robot.drivetraintank.setLeft(0);
    	Robot.drivetraintank.setRight(0);
    	Robot.drivetraintank.setRight_Back(0);
    	Robot.gearFlip.FullStop();
    }

    protected void interrupted() {
    }
}
